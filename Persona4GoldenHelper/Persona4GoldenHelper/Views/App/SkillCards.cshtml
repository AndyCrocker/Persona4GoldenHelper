@model SkillCardListingViewModel

@{
    var types = new List<string>() { "Physical", "Magical", "Support", "Passive" };
}

<div>
    <h2 class="text-align-center col-md-12">Skill Card Locations</h2>
    <table class="col-md-6 col-md-offset-3">
        <thead>
            <tr>
                <th class="text-align-center">Dungeon</th>
                <th class="text-align-center">Skill Card Ranks</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var skillCardLocation in Model.SkillCardLocations)
            {
                <tr>
                    <td class="text-bright text-align-center">@skillCardLocation.DungeonName</td>
                    <td class="text-align-center">Ranks @skillCardLocation.RankLowerBound-@skillCardLocation.RankUpperBound</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div>
    @foreach (var type in types)
    {
        var skillCards = GetSkillCardsByType(type);
        <div>
            <h2 class="text-align-center col-md-12">@type</h2>
            <table class="col-md-6 col-md-offset-3">
                <thead>
                    <tr>
                        <th class="text-align-center">Rank</th>
                        <th>Skill Cards</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 1; i <= 10; i++)
                    {
                        var rankSkillCards = GetSkillCardsByRank(skillCards, i);

                        <tr>
                            <td class="text-align-center">@i</td>
                            <td>
                                @if (rankSkillCards.Count == 0)
                                {
                                    @:-
                                }

                                @for (int j = 0; j < rankSkillCards.Count; j++)
                                {
                                    <span class="text-bright">@rankSkillCards[j].Name</span>
                                    @(j != rankSkillCards.Count() - 1 ? "," : "")
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@functions {
    private List<SkillCard> GetSkillCardsByType(string type)
    {
        return Model.SkillCards
            .Where(skillCard => skillCard.Type.ToString() == type)
            .ToList();
    }

    private List<SkillCard> GetSkillCardsByRank(List<SkillCard> skillCards, int rank)
    {
        return skillCards
            .Where(skillCard => skillCard.Rank == rank)
            .ToList();
    }
}