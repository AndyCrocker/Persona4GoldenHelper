@model ShadowViewModel

<div>
    <h2 class="col-md-12 text-align-center">
        @Model.Shadows[0].Name
        <span class="text-dark">(</span>
        <span class="type-normal" @(Model.Shadows.Where(shadow => shadow.Type.ToString() == "Normal").Any() ? "" : "hidden")>Normal</span>
        <span class="type-miniboss" @(Model.Shadows.Where(shadow => shadow.Type.ToString() == "MiniBoss").Any() ? "" : "hidden")>Mini Boss</span>
        <span class="type-boss" @(Model.Shadows.Where(shadow => shadow.Type.ToString() == "Boss").Any() ? "" : "hidden")>Boss</span>
        <span class="text-dark">)</span>
    </h2>
</div>

@foreach (var shadow in Model.Shadows)
{
    <div>
        <h2 class="type-@shadow.Type col-md-12 text-align-center">@(shadow.Type.ToString() == "MiniBoss" ? "Mini Boss" : shadow.Type.ToString()) <span class="text-bright">(@shadow.Level)</span></h2>
    </div>

    <div>
        <h3 class="col-md-12 text-align-center">Stats</h3>
        <table class="col-md-8 col-md-offset-2 col-sm-12">
            <thead>
                <tr>
                    <th class="text-align-center slim-column">Strength</th>
                    <th class="text-align-center slim-column">Magic</th>
                    <th class="text-align-center slim-column">Endurance</th>
                    <th class="text-align-center slim-column">Agility</th>
                    <th class="text-align-center slim-column">Luck</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="text-align-center">@shadow.Stats.Strength</td>
                    <td class="text-align-center">@shadow.Stats.Magic</td>
                    <td class="text-align-center">@shadow.Stats.Endurance</td>
                    <td class="text-align-center">@shadow.Stats.Agility</td>
                    <td class="text-align-center">@shadow.Stats.Luck</td>
                </tr>
            </tbody>
        </table>
    </div>

    <div>
        <h3 class="col-md-12 text-align-center">Elements</h3>
        <table class="col-md-8 col-md-offset-2 col-sm-12">
            <thead>
                <tr>
                    <th class="text-align-center slim-column"><img src="~/img/Physical.png" alt="Physical" /></th>
                    <th class="text-align-center slim-column"><img src="~/img/Fire.png" alt="Fire" /></th>
                    <th class="text-align-center slim-column"><img src="~/img/Ice.png" alt="Ice" /></th>
                    <th class="text-align-center slim-column"><img src="~/img/Electric.png" alt="Electric" /></th>
                    <th class="text-align-center slim-column"><img src="~/img/Wind.png" alt="Wind" /></th>
                    <th class="text-align-center slim-column"><img src="~/img/Light.png" alt="Light" /></th>
                    <th class="text-align-center slim-column"><img src="~/img/Dark.png" alt="Dark" /></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="text-align-center affinity-@shadow.Elements.Physical">@ConvertElementAffinityToShortHand(shadow.Elements.Physical)</td>
                    <td class="text-align-center affinity-@shadow.Elements.Fire">@ConvertElementAffinityToShortHand(shadow.Elements.Fire)</td>
                    <td class="text-align-center affinity-@shadow.Elements.Ice">@ConvertElementAffinityToShortHand(shadow.Elements.Ice)</td>
                    <td class="text-align-center affinity-@shadow.Elements.Electricity">@ConvertElementAffinityToShortHand(shadow.Elements.Electricity)</td>
                    <td class="text-align-center affinity-@shadow.Elements.Wind">@ConvertElementAffinityToShortHand(shadow.Elements.Wind)</td>
                    <td class="text-align-center affinity-@shadow.Elements.Light">@ConvertElementAffinityToShortHand(shadow.Elements.Light)</td>
                    <td class="text-align-center affinity-@shadow.Elements.Darkness">@ConvertElementAffinityToShortHand(shadow.Elements.Darkness)</td>
                </tr>
            </tbody>
        </table>
    </div>

    <div>
        <h3 class="col-md-12 text-align-center">Skills</h3>
        <table class="col-md-8 col-md-offset-2 col-sm-12">
            <thead>
                <tr>
                    <th class="col-md-2">Name</th>
                    <th>Effect</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < shadow.Skills.Count(); i++)
                {
                    <tr>
                        <td class="text-bright">@shadow.Skills[i].Name</td>
                        <td>@(shadow.FullSkills[i] == null ? "?" : shadow.FullSkills[i].Effect)</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@using static Persona4GoldenHelper.Data.Enums
@functions {
    /// <summary>This will convert the element affinities ("None", "Weak", "Resistant" etc) into shorter versions ("", "wk", "rs" etc) for easy of reading and displaying.</summary>
    /// <param name="element">The element affinity to convert</param>
    /// <returns>The short hand version of the affinity</returns>
    public static string ConvertElementAffinityToShortHand(ElementAffinity element)
    {
        Dictionary<string, string> converter = new Dictionary<string, string>
{
            { "Weak", "wk" },
            { "None", "-" },
            { "Resistant", "rs" },
            { "Null", "nu" },
            { "Reflect", "rf" },
            { "Absorb", "ab" }
        };

        return converter[element.ToString()];
    }
}